#-----------------------------------------------------
# page settings
#-----------------------------------------------------

docx.page_margins do
left    1     # sets the left margin. units in twips.
right   1    # sets the right margin. units in twips.
top     1    # sets the top margin. units in twips.
bottom  1    # sets the bottom margin. units in twips.
end

docx.font name: 'Helvetica'

#-----------------------------------------------------
# Tables
#-----------------------------------------------------
digital_cv = @digital_cv
name = @digital_cv.contact_detail.try(:name)
present_job_title = @digital_cv.present_job ? @digital_cv.present_job.job_title.title : "No Title"
personal_info = @digital_cv.personal_detail.attributes
contact_info = @digital_cv.contact_detail.attributes
docx_image = @digital_cv.photo.image.url(:thumb) ? @digital_cv.photo.image.url(:thumb) : 'digital_cv/photo_cv.png'

cv_skill = @digital_cv.cv_skills
languages = @digital_cv.cv_languages
employement_detail = @digital_cv.employment_details
education_detail = @digital_cv.academic_details
trainings = @digital_cv.trainings
certifications = @digital_cv.certifications
honr_aw = @digital_cv.honor_and_awards
research_or_projectdet = @digital_cv.research_or_project_details
font_url = ENV['RAILS_ENV'] == "development" ? "http://localhost:3000" : "https://talentfore.com/"


c1 = Caracal::Core::Models::TableCellModel.new do
  	img font_url+docx_image, width: 80, height: 80, align: :center
	p
	h1  name, size: '50', bold: true
	h5  present_job_title

	if contact_info['mobile'].present?
		p
		h4 'Personal Info', bgcolor: '272D36', size: 35
	end
	if contact_info['email'].present?
		h5 'Email'
		p contact_info['email']
	end

	if contact_info['mobile'].present?
		h5 "Phone Number"
		p contact_info['mobile']
	end

	if contact_info['skype_username'] != nil && contact_info['skype_username'] !=""
		h5 'Skype Username'
		p contact_info['skype_username']
	end

	if contact_info['linkedin_url'] != nil && contact_info['linkedin_url'] !=""
		h5 'Linkedin Profile URL'
		p contact_info['linkedin_url']
	end

	if contact_info['address'] != nil && contact_info['address'] !=""
		h5 'Address'
		p contact_info['address']
	end

	if cv_skill.size>0
		h4 ' Skills ', bgcolor: '272D36', size: 35
		cv_skill.each do |f|
			p f.skill.title
			img font_url + "/assets/digital_cv/rating_images/"+f.self_rating.to_s+"_rating.png",width:150 , height: 10, align: :left
		end
	end

	if languages.size>0
		h4 ' Languages ', bgcolor: '272D36', size: 35
		languages.each do |lang|
			a = []
			a << 'Read' if lang.read?
			a << 'Write' if lang.write?
			a << 'Speak' if lang.speak?
			p lang.language.title+ "("+a.join(', ')+")"
		end
	end
end

c2 = Caracal::Core::Models::TableCellModel.new do
	if digital_cv.summary.present?
		h6
		p digital_cv.summary
		hr do
			color   'E5E5E5'
			line    :single
			size    1
			spacing 1
		end
	end

	if digital_cv.objective.present?
		h4 "Career Objective", color: '154870', size: 35
		hr do
			color   'E5E5E5'
			line    :single
			size    1
			spacing 1
		end
		p digital_cv.objective
		hr do
			color   'E5E5E5'
			line    :single
			size    1
			spacing 1
		end
	end

	if digital_cv.is_experienced
		h4 'Experience', color: '154870', size: 35
		hr do
			color   'E5E5E5'
			line    :single
			size    1
			spacing 1
		end
		employement_detail.each do |empl|
			end_date = if empl.present_job
			then "present"
			else
			empl.end_date.strftime("%b, %Y")
			end

			table [[empl.start_date.strftime("%b, %Y").to_s + "-\n" + end_date.to_s , empl.job_title.title+"\n"+empl.company.name+"\n"+
			"Responsibilities \n"+ActionView::Base.full_sanitizer.sanitize(empl.responsibilities)+"\n"+
			ActionView::Base.full_sanitizer.sanitize(empl.achievement)]] do
				cell_style cols[0], width: 1200
				border_top do
					color   'FFFFFF'
					line    :single
					size    1
					spacing 2
				end
				border_bottom do
					color   'FFFFFF'
					line    :single
					size    1
					spacing 2
				end
				border_left do
					color   'FFFFFF'
					line    :single
					size    1
					spacing 2
				end
				border_right do
					color   'FFFFFF'
					line    :single
					size    1
					spacing 2
				end
			end
			hr do
				color   'E5E5E5'
				line    :single
				size    1
				spacing 1
			end
		end
	end

 	if digital_cv.academic_details.present?
		h4 'Education', color: '154870', size: 35
		hr do
			color   'E5E5E5'
			line    :single
			size    1
			spacing 1
		end
		education_detail.each do |educat|
			table [[educat.start_date.strftime("%b, %Y").to_s+"-\n"+educat.end_date.strftime("%b, %Y").to_s,educat.degree.title+" " +"in "+educat.specialization.title+" with "+ educat.percentage.to_s + " from "+ educat.university]] do
				cell_style cols[0], width: 1200
				border_top do
					color   'FFFFFF'
					line    :single
					size    1
					spacing 2
				end
				border_bottom do
					color   'FFFFFF'
					line    :single
					size    1
					spacing 2
				end
				border_left do
					color   'FFFFFF'
					line    :single
					size    1
					spacing 2
				end
				border_right do
					color   'FFFFFF'
					line    :single
					size    1
					spacing 2
				end
			end
		end
		hr do
			color   'E5E5E5'
			line    :single
			size    1
			spacing 1
		end
	end

	if trainings.size>0
		h4 "Trainings", color: '154870', size: 35
		hr do
			color   'E5E5E5'
			line    :single
			size    1
			spacing 1
		end
	 	ul do
			trainings.each do |tra|
				li "Attended " + tra.duration.to_s + " days training on " + tra.name + " from " + tra.institute
			end
		end
	end

	if certifications.size>0
		hr do
			color   'E5E5E5'
			line    :single
			size    1
			spacing 1
		end
		h4 "Certifications" , color: '154870', size: 35
		hr do
			color   'E5E5E5'
			line    :single
			size    1
			spacing 1
		end
		certifications.each do |cert|
			table [[cert.date.strftime("%b, %Y"),cert.title + " - " +  cert.certifier]] do
				cell_style cols[0], width: 1200
				border_top do
					color   'FFFFFF'
					line    :single
					size    1
					spacing 2
				end
				border_bottom do
					color   'FFFFFF'
					line    :single
					size    1
					spacing 2
				end
				border_left do
					color   'FFFFFF'
					line    :single
					size    1
					spacing 2
				end
				border_right do
					color   'FFFFFF'
					line    :single
					size    1
					spacing 2
				end
			end
		end
		hr do
			color   'E5E5E5'
			line    :single
			size    1
			spacing 1
		end
	end

	if honr_aw.size>0
		h4 "Honors and Awards", color: '154870', size: 35
		hr do
			color   'E5E5E5'
			line    :single
			size    1
			spacing 1
		end
		honr_aw.each do |honor|

			table [[honor.award_date.strftime("%b, %Y"),honor.title + " at " + honor.company_name]] do
				cell_style cols[0], width: 1200
				border_top do
					color   'FFFFFF'
					line    :single
					size    1
					spacing 2
				end
				border_bottom do
					color   'FFFFFF'
					line    :single
					size    1
					spacing 2
				end
				border_left do
					color   'FFFFFF'
					line    :single
					size    1
					spacing 2
				end
				border_right do
					color   'FFFFFF'
					line    :single
					size    1
					spacing 2
				end
			end
		end
		hr do
			color   'E5E5E5'
			line    :single
			size    1
			spacing 1
		end
	end

	if research_or_projectdet.size>0
		h4 "Research or Project Details", color: '154870', size: 35
		hr do
			color   'E5E5E5'
			line    :single
			size    1
			spacing 1
		end
		research_or_projectdet.each do |project_det|
		table [["Title: ", project_det.title]] do
			cell_style cols[0], width: 1260
			cell_style cells, margins: { top: 0, bottom: 0, left: 0, right: 0 }
			border_top do
				color   'FFFFFF'
				line    :single
				size    1
				spacing 2
			end
			border_bottom do
				color   'FFFFFF'
				line    :single
				size    1
				spacing 2
			end
			border_left do
				color   'FFFFFF'
				line    :single
				size    1
				spacing 2
			end
			border_right do
				color   'FFFFFF'
				line    :single
				size    1
				spacing 2
			end
		end
		if project_det.duration.present?
			table [["Duration: ", project_det.duration.to_s  + " days"]] do
				cell_style cols[0], width: 1260
				cell_style cells, margins: { top: 0, bottom: 0, left: 0, right: 0 }
				border_top do
					color   'FFFFFF'
					line    :single
					size    1
					spacing 2
				end
				border_bottom do
					color   'FFFFFF'
					line    :single
					size    1
					spacing 2
				end
				border_left do
					color   'FFFFFF'
					line    :single
					size    1
					spacing 2
				end
				border_right do
					color   'FFFFFF'
					line    :single
					size    1
					spacing 2
				end
			end
		end
		table [["Description:",ActionView::Base.full_sanitizer.sanitize(project_det.description)]] do
			cell_style cols[0], width: 1260
			cell_style cells, margins: { top: 0, bottom: 0, left: 0, right: 0 }
			border_top do
				color   'FFFFFF'
				line    :single
				size    1
				spacing 2
			end
			border_bottom do
				color   'FFFFFF'
				line    :single
				size    1
				spacing 2
			end
			border_left do
				color   'FFFFFF'
				line    :single
				size    1
				spacing 2
			end
			border_right do
				color   'FFFFFF'
				line    :single
				size    1
				spacing 2
			end
			end
			hr do
			color   'E5E5E5'
			line    :single
			size    1
			spacing 1
			end
		end
	end

	if digital_cv.personal_detail.present? 
  		h4 "ADDITIONAL INFORMATION", color: '154870', size: 35
  	end
  
	cp1 = Caracal::Core::Models::TableCellModel.new do
		if digital_cv.personal_detail.try(:nationality).present?
		p "Nationality", bold: true
		end
		if digital_cv.personal_detail.try(:date_of_birth).present?
		p "Date of birth", bold: true
		end
		if digital_cv.personal_detail.try(:gender).present?
		p "Gender", bold: true
		end
		if digital_cv.personal_detail.try(:marital_status).present?
		p "Marial Status", bold: true
		end
		if digital_cv.personal_detail.try(:disabled).present?
		p "Disabled", bold: true
		end
		if digital_cv.personal_detail.try(:hobbies).present? 
		p "Hobbies", bold: true
		end
	end
	cp2 = Caracal::Core::Models::TableCellModel.new do
		if digital_cv.personal_detail.try(:nationality).present?
		p ": "+digital_cv.personal_detail.nationality.to_s.capitalize
		end
		if digital_cv.personal_detail.try(:date_of_birth).present?
		p ": "+digital_cv.personal_detail.date_of_birth.to_s
		end
		if digital_cv.personal_detail.try(:gender).present?
		p ": "+DigitalCvsHelper::GENDER[digital_cv.personal_detail.gender]
		end
		if digital_cv.personal_detail.try(:marital_status).present?
		p ": "+DigitalCvsHelper::MARITAL_STATUS[digital_cv.personal_detail.marital_status]
		end
		if digital_cv.personal_detail.try(:disabled).present?
		p ": "+digital_cv.personal_detail.disabled? ? 'Yes' : 'No'
		end
		if digital_cv.personal_detail.try(:hobbies).present? 
		p ": "+ActionView::Base.full_sanitizer.sanitize(digital_cv.personal_detail.hobbies)
		end
	end
	table [[cp1,cp2]] do
		cell_style cols[0], width: 2000
	end
	hr do
		color   'E5E5E5'
		line    :single
		size    1
		spacing 1
	end
end

docx.table [[c1,c2]] do
	cell_style cols[0], width: 3500
	cell_style cols[0], background: '394049'
	cell_style cols[0], color: 'ffffff'
	border_top do
		color   'FFFFFF'
		line    :single
		size    1
		spacing 2
	end
	border_bottom do
		color   'FFFFFF'
		line    :single
		size    1
		spacing 2
	end
	border_left do
		color   'FFFFFF'
		line    :single
		size    1
		spacing 2
	end
	border_right do
		color   'FFFFFF'
		line    :single
		size    1
		spacing 2
	end
end